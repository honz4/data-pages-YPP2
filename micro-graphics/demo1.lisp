(change-directory "~/Documents/GitHub/data-pages-YPP2/micro-graphics")
(load "../micro-graphics/load.lisp")

(defun paint-flag (w)
    (mg:set-param w :background :skyblue)
    (mg:set-param w :foreground :white)
    (mg:clear w)
    (mg:set-param w :filledp t)
    (mg:set-param w :closedp t)
    (mg:draw-polygon w '(20 20 200 20 200 140 20 140))
    (mg:set-param w :foreground :black)
    (mg:draw-polygon w '(20 20 200 20 200 140 20 140))
    (mg:set-param w :foreground :red)
    (mg:draw-circle w 110 80 30))

(defun display-flag ()
  (mg:display-window :callbacks (list :display (lambda (w) (paint-flag w))
                                      :mouse-down (lambda (w butt x y) (declare (ignore w))
                                                    (format t "~%:mouse-down ~s ~s ~s" butt x y))
                                      :mouse-up (lambda (w butt x y) (declare (ignore w))
                                                    (format t "~%:mouse-up ~s ~s ~s" butt x y))
                                      :double-click (lambda (w butt x y)
                                                    (format t "~%:double-click ~s ~s ~s" butt x y))
                                      :mouse-move (lambda (w butt x y)
                                                    (format t "~%:mouse-move ~s ~s ~s" butt x y))
                                      :character (lambda (w char)
                                                   (format t "~%:character ~s" char))
                                      :resize (lambda (w width height)
                                                (format t "~%resize... ~s ~s" width height))
                                      :destroy (lambda (w)
                                                 (format t "~%Window ~s destroyed" w))
                                      :activate (lambda (w actp)
                                                  (if actp
                                                      (format t "~%Window ~s activated" w)
                                                    (format t "~%Window ~s deactivated" w))))))

(setf w (display-flag))
;(get-callbacks w)
(mg:set-callback w :display (lambda (w) (paint-flag w)))
